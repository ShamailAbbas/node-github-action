# Name of the workflow
name: Docker Build, Scan, and Push with Email Notifications

# Trigger the workflow on push or pull request to the 'main' branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Environment variables for Docker Hub repository and image name
env:
  DOCKER_HUB_REPOSITORY: thallavi/node-github-action # Replace with your Docker Hub repo
  IMAGE_NAME: node-github-action # Replace with your Docker image name
  EMAIL_TO: shamailabbas61@gmail.com # Email address to send notifications

# Define the jobs
jobs:
  # Job 1: Build the Docker image
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    outputs:
      image-tag: ${{ steps.build-image.outputs.image-tag }} # Output the image tag for use in other jobs

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3 # Official GitHub Action to checkout code

      # Step 2: Set up Docker Buildx for advanced Docker builds (e.g., multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub using credentials stored in GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} # Docker Hub username from secrets
          password: ${{ secrets.DOCKER_HUB_TOKEN }} # Docker Hub token/password from secrets

      # Step 4: Build the Docker image
      - name: Build Docker image
        id: build-image
        run: |
          docker build -t ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }} -t ${{ env.DOCKER_HUB_REPOSITORY }}:latest .
          echo "image-tag=${{ github.sha }}" >> $GITHUB_ENV

      # Step 5: Save the Docker image as an artifact for use in other jobs
      - name: Save Docker image as artifact
        run: docker save ${{ env.DOCKER_HUB_REPOSITORY }}:latest -o /tmp/docker-image.tar
        - name: Upload Docker image artifact
          uses: actions/upload-artifact@v3
          with:
            name: docker-image
            path: /tmp/docker-image.tar
            retention-days: 1

      # Step 6: Send build status email
      - name: Send build status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Build Status: ${{ job.status }}"
          body: |
            The build job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  # Job 2: Scan the filesystem for vulnerabilities
  scan-filesystem:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Scan filesystem for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          exit-code: "1"
          format: "table"

      - name: Send filesystem scan status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Filesystem Scan Status: ${{ job.status }}"
          body: |
            The filesystem scan job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  # Job 3: Scan dependencies for vulnerabilities
  scan-dependencies:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Run Dependency-Check
        uses: owasp/dependency-check-action@v3
        with:
          project: "node-github-action"
          scan-dir: "."
          format: "HTML"
          fail-on-cvss: 8

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report.html

      - name: Send dependency scan status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Dependency Scan Status: ${{ job.status }}"
          body: |
            The dependency scan job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  # Job 4: Scan the Docker image for vulnerabilities
  scan-image:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/docker-image.tar

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.DOCKER_HUB_REPOSITORY }}:${{ needs.build.outputs.image-tag }}"
          format: "table"
          exit-code: "1"

      - name: Send image scan status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Image Scan Status: ${{ job.status }}"
          body: |
            The image scan job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  # Job 5: Push the Docker image to Docker Hub
  push:
    runs-on: ubuntu-latest
    needs: [scan-filesystem, scan-dependencies, scan-image]

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/docker-image.tar

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_HUB_REPOSITORY }}:${{ needs.build.outputs.image-tag }}
          docker push ${{ env.DOCKER_HUB_REPOSITORY }}:latest
