name: Docker Build, Scan, and Push with Email Notifications

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_HUB_REPOSITORY: thallavi/node-github-action
  IMAGE_NAME: node-github-action
  EMAIL_TO: shamailabbas61@gmail.com

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build-image.outputs.image-tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        id: build-image
        run: |
          docker build -t ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }} -t ${{ env.DOCKER_HUB_REPOSITORY }}:latest .
          echo "image-tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Save Docker image as tar file
        run: |
          docker save -o /tmp/docker-image.tar ${{ env.DOCKER_HUB_REPOSITORY }}:${{ github.sha }}

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: /tmp/docker-image.tar
          retention-days: 1

      - name: Send build status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Build Status: ${{ job.status }}"
          body: |
            The build job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  scan-filesystem:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Scan filesystem for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          exit-code: "1"
          format: "table"

      - name: Send filesystem scan status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Filesystem Scan Status: ${{ job.status }}"
          body: |
            The filesystem scan job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  scan-dependencies:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Download OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.3.1/dependency-check-8.3.1-release.zip -O dependency-check.zip
          mkdir -p /opt/dependency-check
          unzip dependency-check.zip -d /opt/dependency-check
          chmod +x /opt/dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency-Check
        run: |
          /opt/dependency-check/bin/dependency-check.sh \
            --project "node-github-action" \
            --scan "." \
            --format "HTML" \
            --out "dependency-check-report" \
            --failOnCVSS 8

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Send dependency scan status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Dependency Scan Status: ${{ job.status }}"
          body: |
            The dependency scan job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  scan-image:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/docker-image.tar

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.DOCKER_HUB_REPOSITORY }}:${{ needs.build.outputs.image-tag }}"
          format: "table"
          exit-code: "1"

      - name: Send image scan status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Image Scan Status: ${{ job.status }}"
          body: |
            The image scan job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain

  push:
    runs-on: ubuntu-latest
    needs: [scan-filesystem]

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/docker-image.tar

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag ${{ env.DOCKER_HUB_REPOSITORY }}:${{ needs.build.outputs.image-tag }} ${{ env.DOCKER_HUB_REPOSITORY }}:latest
          docker push ${{ env.DOCKER_HUB_REPOSITORY }}:${{ needs.build.outputs.image-tag }}
          docker push ${{ env.DOCKER_HUB_REPOSITORY }}:latest

      - name: Send push status email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Push Status: ${{ job.status }}"
          body: |
            The push job has completed with status: ${{ job.status }}.
            Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ env.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain
